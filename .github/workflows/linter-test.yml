name: Lint and Test

on:
  pull_request:
    types:
      - opened
  workflow_call:

jobs:
  python-lint:
    name: Application Linter
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('docker/requirements.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docker/requirements.txt
          pip install pylint
          pip install pytest
      - name: Analysing the code with pylint
        run: |
          pylint $(git ls-files '*.py')

  yaml-lint:
    name: YAML Linter
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          pip install yamllint
      - name: Analysing the code with yamllint
        run: |
          yamllint -c config/yamllint.yml .

  markdown-lint:
    name: Markdown Linter
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Analysing the code with markdownlin
        uses: nosborn/github-action-markdown-cli@v3.2.0
        with:
          files: .
          config_file: config/markdownlint.yml
          dot: true

  test:
    name: Run python tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: python-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('docker/requirements.txt') }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docker/requirements.txt
          pip install pylint
          pip install pytest
      - name: Run unit tests
        run: |
          pytest
